{"version":3,"sources":["contexts/ThemeContext.js","contexts/AuthContext.js","components/Navbar.js","reducers/bookReducer.js","contexts/BookContext.js","components/AddBookForm.js","components/Booklist.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","navLight","navDark","toggleTheme","setState","Provider","value","this","props","children","Component","AuthContext","AuthContextProvider","isAuthenticated","toggleAuth","Navbar","useContext","theme","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","bookReducer","action","payload","filter","book","BookContext","BookContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","books","dispatch","useEffect","setItem","stringify","AddBookForm","addBook","useState","title","setTitle","author","setAuthor","onSubmit","e","preventDefault","name","onChange","target","Booklist","length","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46f63727.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n  state = {\r\n    isLightTheme: true,\r\n    navLight: \"navbar-dark bg-primary\",\r\n    navDark: \"navbar-dark bg-dark\"\r\n  };\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      isLightTheme: !this.state.isLightTheme\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <ThemeContext.Provider\r\n        value={{ ...this.state, toggleTheme: this.toggleTheme }}\r\n      >\r\n        {this.props.children}\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nclass AuthContextProvider extends Component {\r\n  state = {\r\n    isAuthenticated: false\r\n  };\r\n  toggleAuth = () => {\r\n    this.setState({\r\n      isAuthenticated: !this.state.isAuthenticated\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <AuthContext.Provider\r\n        value={{ ...this.state, toggleAuth: this.toggleAuth }}\r\n      >\r\n        {this.props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React, { Component, useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport AuthContextProvider, { AuthContext } from \"../contexts/AuthContext\";\r\n\r\n/* class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <AuthContext.Consumer>\r\n        {authContext => (\r\n          <ThemeContext.Consumer>\r\n            {context => {\r\n              const { isAuthenticated, toggleAuth } = authContext;\r\n              const { isLightTheme, navLight, navDark, toggleTheme } = context;\r\n              const theme = isLightTheme ? navLight : navDark;\r\n              return (\r\n                <div>\r\n                  <nav className={\"navbar navbar-expand-lg \" + theme}>\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                      BookList Manager\r\n                    </a>\r\n                    <button\r\n                      className=\"navbar-toggler\"\r\n                      type=\"button\"\r\n                      data-toggle=\"collapse\"\r\n                      data-target=\"#navbarSupportedContent\"\r\n                      aria-controls=\"navbarSupportedContent\"\r\n                      aria-expanded=\"false\"\r\n                      aria-label=\"Toggle navigation\"\r\n                    >\r\n                      <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div\r\n                      className=\"collapse navbar-collapse\"\r\n                      id=\"navbarSupportedContent\"\r\n                    >\r\n                      <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                          <a className=\"nav-link\" href=\"#\">\r\n                            Home\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a className=\"nav-link\" href=\"#\">\r\n                            About\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                      <div className=\"my-2\">\r\n                        <button\r\n                          className=\"btn btn-outline-light\"\r\n                          onClick={toggleTheme}\r\n                        >\r\n                          Change Theme\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-outline-light ml-2\"\r\n                          onClick={toggleAuth}\r\n                        >\r\n                          {isAuthenticated ? \"Logout\" : \"Login\"}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </nav>\r\n                </div>\r\n              );\r\n            }}\r\n          </ThemeContext.Consumer>\r\n        )}\r\n      </AuthContext.Consumer>\r\n    );\r\n  }\r\n} */\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated, toggleAuth } = useContext(AuthContext);\r\n  const { isLightTheme, navLight, navDark, toggleTheme } = useContext(\r\n    ThemeContext\r\n  );\r\n  const theme = isLightTheme ? navLight : navDark;\r\n  return (\r\n    <div>\r\n      <nav className={\"navbar navbar-expand-lg \" + theme}>\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          BookList Manager\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-outline-light\" onClick={toggleTheme}>\r\n              Change Theme\r\n            </button>\r\n            <button className=\"btn btn-outline-light ml-2\" onClick={toggleAuth}>\r\n              {isAuthenticated ? \"Logout\" : \"Login\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const bookReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_BOOK\":\r\n      return [...state, action.payload];\r\n    case \"REMOVE_BOOK\":\r\n      return state.filter(book => book.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useEffect, useReducer } from \"react\";\r\nimport uuid from \"uuid/v1\";\r\nimport { bookReducer } from \"../reducers/bookReducer\";\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = props => {\r\n  /* const [books, setBooks] = useState([\r\n    { title: \"Winners Take All\", author: \"Anand Giridhardas\", id: 1 },\r\n    { title: \"The Hate U Give\", author: \"Angie Thomas\", id: 2 },\r\n    { title: \"The God of Small Things\", author: \"Arundhati Roy\", id: 3 },\r\n    { title: \"Veronica Decides to Die\", author: \"Paulo Coelho\", id: 4 }\r\n  ]);\r\n  const addBook = (title, author) => {\r\n    setBooks([...books, { title: title, author: author, id: uuid() }]);\r\n  };\r\n  const removeBook = id => {\r\n    setBooks(books.filter(book => book.id !== id));\r\n  }; */\r\n  const [books, dispatch] = useReducer(bookReducer, [], () => {\r\n    const localData = localStorage.getItem(\"books\");\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n  useEffect(() => {\r\n    localStorage.setItem(\"books\", JSON.stringify(books));\r\n  }, [books]);\r\n  return (\r\n    <BookContext.Provider value={{ books, dispatch }}>\r\n      {props.children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BookContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\n\r\nconst AddBookForm = ({ addBook }) => {\r\n  const { dispatch } = useContext(BookContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const book = { title: title, author: author };\r\n    dispatch({ type: \"ADD_BOOK\", payload: book });\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n  };\r\n  return (\r\n    <div className=\"col-md-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Book Title</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                className=\"form-control\"\r\n                value={title}\r\n                onChange={e => setTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Book Author</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"author\"\r\n                className=\"form-control\"\r\n                value={author}\r\n                onChange={e => setAuthor(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\">Add Book</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBookForm;\r\n","import React, { useContext } from \"react\";\r\nimport AddBookForm from \"./AddBookForm\";\r\nimport uuid from \"uuid/v1\";\r\nimport { BookContext } from \"../contexts/BookContext\";\r\n\r\nconst Booklist = () => {\r\n  const { books, dispatch } = useContext(BookContext);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-4 mb-4\">\r\n        <div className=\"col-md-12\">\r\n          <h2 className=\"text-center\">Booklist Manager</h2>\r\n          <div className=\"row justify-content-around mt-4 mb-4\">\r\n            <AddBookForm />\r\n            <div className=\"col-md-6\">\r\n              {books.length ? (\r\n                <ul className=\"list-group\">\r\n                  {books.map(book => (\r\n                    <li className=\"list-group-item\" key={book.id}>\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <h5 className=\"mb-1\">{book.title}</h5>\r\n                        <span className=\"text-danger\">\r\n                          <small>\r\n                            <button\r\n                              className=\"btn btn-link text-danger\"\r\n                              onClick={() =>\r\n                                dispatch({\r\n                                  type: \"REMOVE_BOOK\",\r\n                                  payload: book.id\r\n                                })\r\n                              }\r\n                            >\r\n                              Remove\r\n                            </button>\r\n                          </small>\r\n                        </span>\r\n                      </div>\r\n                      <small>{book.author}</small>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>No books to read. Add books to your reading list.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Booklist;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Booklist from \"./components/Booklist\";\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\nimport BookContextProvider from \"./contexts/BookContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <AuthContextProvider>\n          <Navbar />\n          <BookContextProvider>\n            <Booklist />\n          </BookContextProvider>\n        </AuthContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}